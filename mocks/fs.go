// Code generated by MockGen. DO NOT EDIT.
// Source: ./fs/fs.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockVFS is a mock of VFS interface
type MockVFS struct {
	ctrl     *gomock.Controller
	recorder *MockVFSMockRecorder
}

// MockVFSMockRecorder is the mock recorder for MockVFS
type MockVFSMockRecorder struct {
	mock *MockVFS
}

// NewMockVFS creates a new mock instance
func NewMockVFS(ctrl *gomock.Controller) *MockVFS {
	mock := &MockVFS{ctrl: ctrl}
	mock.recorder = &MockVFSMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockVFS) EXPECT() *MockVFSMockRecorder {
	return m.recorder
}

// ReadFile mocks base method
func (m *MockVFS) ReadFile(path string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadFile", path)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReadFile indicates an expected call of ReadFile
func (mr *MockVFSMockRecorder) ReadFile(path interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadFile", reflect.TypeOf((*MockVFS)(nil).ReadFile), path)
}

// MockFS is a mock of FS interface
type MockFS struct {
	ctrl     *gomock.Controller
	recorder *MockFSMockRecorder
}

// MockFSMockRecorder is the mock recorder for MockFS
type MockFSMockRecorder struct {
	mock *MockFS
}

// NewMockFS creates a new mock instance
func NewMockFS(ctrl *gomock.Controller) *MockFS {
	mock := &MockFS{ctrl: ctrl}
	mock.recorder = &MockFSMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFS) EXPECT() *MockFSMockRecorder {
	return m.recorder
}

// GetFileFromVirtualFS mocks base method
func (m *MockFS) GetFileFromVirtualFS(path string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFileFromVirtualFS", path)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFileFromVirtualFS indicates an expected call of GetFileFromVirtualFS
func (mr *MockFSMockRecorder) GetFileFromVirtualFS(path interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFileFromVirtualFS", reflect.TypeOf((*MockFS)(nil).GetFileFromVirtualFS), path)
}

// GetFileFromFS mocks base method
func (m *MockFS) GetFileFromFS(path string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFileFromFS", path)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFileFromFS indicates an expected call of GetFileFromFS
func (mr *MockFSMockRecorder) GetFileFromFS(path interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFileFromFS", reflect.TypeOf((*MockFS)(nil).GetFileFromFS), path)
}

// GetCurrentDirectory mocks base method
func (m *MockFS) GetCurrentDirectory() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCurrentDirectory")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCurrentDirectory indicates an expected call of GetCurrentDirectory
func (mr *MockFSMockRecorder) GetCurrentDirectory() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurrentDirectory", reflect.TypeOf((*MockFS)(nil).GetCurrentDirectory))
}
